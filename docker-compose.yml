version: '2'

services:
  db:
    image: postgres
    volumes:
      - dbstorage:/var/lib/postgresql/data
  redis:
    image: redis

  back:
    build: back
    command: uwsgi --chdir=/usr/src/app --module=udon_back.wsgi:application --socket=0.0.0.0:8000
    volumes:
      - ./back:/usr/src/app
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - "DJANGO_HOSTS=localhost"
      - "PRODUCTION=True"
      - "REDIS_HOST=redis"
  celeryworker:
    build: back
    command: celery -A udon_back worker -l info
    volumes:
      - ./back:/usr/src/app
    depends_on:
      - db
      - redis
    environment:
      - "DJANGO_HOSTS=localhost"
      - "PRODUCTION=True"
      - "REDIS_HOST=redis"
  wsinterface:
    build: back
    command: daphne -b 0.0.0.0 -p 8001 udon_back.asgi:channel_layer
    volumes:
      - ./back:/usr/src/app
    ports:
      - "127.0.0.1:8001:8001"
    depends_on:
      - db
      - redis
    environment:
      - "DJANGO_HOSTS=localhost"
      - "PRODUCTION=True"
      - "REDIS_HOST=redis"
  wsworker:
    build: back
    command: python manage.py runworker
    volumes:
      - ./back:/usr/src/app
    depends_on:
      - db
      - redis
    environment:
      - "DJANGO_HOSTS=localhost"
      - "PRODUCTION=True"
      - "REDIS_HOST=redis"

  front:
    image: node:latest
    volumes:
      - ./front:/usr/src/app
    command: sh -c "cd /usr/src/app && npm install && npm run build --production"
    environment:
      - "REACT_APP_STREAM_URL=http://localhost"
      - "REACT_APP_API_URL=/api"
      - "REACT_APP_ADMIN_URL=http://localhost/admin/"
      - "REACT_APP_CHAT_URL=ws://localhost/ws"

volumes:
  dbstorage:
