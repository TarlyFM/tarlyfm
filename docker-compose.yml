version: '2'

services:
  db:
    image: postgres
    volumes:
      - dbstorage:/var/lib/postgresql/data
    networks:
      - django
  redis:
    image: redis
    networks:
      - django

  back:
    build: back
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./back:/usr/src/app
    networks:
      - django
    depends_on:
      - db
      - redis
    env_file: ./django.env
  celeryworker:
    build: back
    command: celery -A udon_back worker -l info
    volumes:
      - ./back:/usr/src/app
    networks:
      - django
    depends_on:
      - db
      - redis
    env_file: ./django.env
  wsinterface:
    build: back
    ports:
      - "127.0.0.1:8001:8001"
    command: daphne -b 0.0.0.0 -p 8001 udon_back.asgi:channel_layer
    volumes:
      - ./back:/usr/src/app
    networks:
      - django
    depends_on:
      - db
      - redis
    env_file: ./django.env
  wsworker:
    build: back
    command: python manage.py runworker
    volumes:
      - ./back:/usr/src/app
    depends_on:
      - db
      - redis
    networks:
      - django
    env_file: ./django.env

  ls-bridge:
    build: back
    command: uwsgi --chdir=/usr/src/app --module=udon_back.wsgi:application --http 0.0.0.0:8000
    depends_on:
      - redis
      - db
    networks:
      - django
      - stream
    volumes:
      - ./back:/usr/src/app
    env_file: ./django.env
    environment:
      - LIQUIDSOAP_BRIDGE=yes
      - "DJANGO_HOSTS=ls-bridge"
  liquidsoap:
    build: liquidsoap
    depends_on:
      - icecast
      - ls-bridge
    networks:
      - stream
    volumes:
      - ./back/media:/usr/src/app/media:ro
    env_file: ./stream.env
  icecast:
    build: icecast
    ports:
      - "8080:8000"
    networks:
      - stream
    env_file: ./stream.env

  #Helper container
  front:
    build: front
    volumes:
      - ./front/build:/usr/src/app/build
    env_file: ./front.env

networks:
  django:
  stream:

volumes:
  dbstorage:
